# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
import shared_pb2 as shared__pb2


class SharedServiceStub(object):
    """the shared service is used to get the latest version of the API and the app service credentials
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_api_latest_version_for_client = channel.unary_unary(
                '/shared.SharedService/get_api_latest_version_for_client',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=shared__pb2.ApiVersionResponse.FromString,
                )
        self.get_app_service_credentials = channel.unary_unary(
                '/shared.SharedService/get_app_service_credentials',
                request_serializer=shared__pb2.AppService.SerializeToString,
                response_deserializer=shared__pb2.AppServiceResponse.FromString,
                )


class SharedServiceServicer(object):
    """the shared service is used to get the latest version of the API and the app service credentials
    """

    def get_api_latest_version_for_client(self, request, context):
        """get the latest version of the API based on the version of the client (mobile build number or web version e.g. 1.0.0).
        if the client is up to date, should_upgrade will be false
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_app_service_credentials(self, request, context):
        """get the app service credentials for the given app service.
        this is used to get the google maps api key and google auth client id in encoded form
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SharedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_api_latest_version_for_client': grpc.unary_unary_rpc_method_handler(
                    servicer.get_api_latest_version_for_client,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=shared__pb2.ApiVersionResponse.SerializeToString,
            ),
            'get_app_service_credentials': grpc.unary_unary_rpc_method_handler(
                    servicer.get_app_service_credentials,
                    request_deserializer=shared__pb2.AppService.FromString,
                    response_serializer=shared__pb2.AppServiceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shared.SharedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SharedService(object):
    """the shared service is used to get the latest version of the API and the app service credentials
    """

    @staticmethod
    def get_api_latest_version_for_client(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shared.SharedService/get_api_latest_version_for_client',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            shared__pb2.ApiVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_app_service_credentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shared.SharedService/get_app_service_credentials',
            shared__pb2.AppService.SerializeToString,
            shared__pb2.AppServiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
