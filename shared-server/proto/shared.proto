syntax = "proto3";
package shared;

import "google/protobuf/wrappers.proto";

// the shared service is used to get the latest version of the API and the app service credentials
service SharedService {
  // get the latest version of the API based on the version of the client (mobile build number or web version e.g. 1.0.0).
  // if the client is up to date, should_upgrade will be false
  rpc get_api_latest_version_for_client (google.protobuf.StringValue) returns (ApiVersionResponse);

  // get the app service credentials for the given app service.
  // this is used to get the google maps api key and google auth client id in encoded form
  rpc get_app_service_credentials (AppService) returns (AppServiceResponse);
}

// the app service credential type
enum AppServiceCredential {
  google_auth = 0;
  google_maps = 1;
}

// the app service type
message AppService {
  AppServiceCredential credential = 1;
}

// the app service response
message AppServiceResponse {
  string encoded_key = 1;
  string encoded_secret = 2;
  AppServiceCredential credential = 3;
}

// the api version response
message ApiVersionResponse {
  string version = 1;
  bool should_upgrade = 2;
}